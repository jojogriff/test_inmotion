var cov_1kdv08dd7c=function(){var path='/Users/joseph/tests/package/movie-collection/server/models/user.js',hash='c80cda72b2b03d9c5f7bc6cbcd09f240c3945307',global=new Function('return this')(),gcv='__coverage__',coverageData={path:'/Users/joseph/tests/package/movie-collection/server/models/user.js',statementMap:{'0':{start:{line:1,column:17},end:{line:1,column:36}},'1':{start:{line:2,column:15},end:{line:2,column:39}},'2':{start:{line:4,column:15},end:{line:4,column:30}},'3':{start:{line:6,column:19},end:{line:9,column:24}},'4':{start:{line:11,column:0},end:{line:27,column:3}},'5':{start:{line:12,column:13},end:{line:12,column:17}},'6':{start:{line:14,column:2},end:{line:14,column:50}},'7':{start:{line:14,column:36},end:{line:14,column:50}},'8':{start:{line:16,column:2},end:{line:26,column:5}},'9':{start:{line:17,column:4},end:{line:17,column:30}},'10':{start:{line:17,column:13},end:{line:17,column:30}},'11':{start:{line:19,column:4},end:{line:25,column:7}},'12':{start:{line:20,column:6},end:{line:20,column:32}},'13':{start:{line:20,column:15},end:{line:20,column:32}},'14':{start:{line:23,column:6},end:{line:23,column:27}},'15':{start:{line:24,column:6},end:{line:24,column:13}},'16':{start:{line:29,column:0},end:{line:34,column:2}},'17':{start:{line:30,column:2},end:{line:33,column:5}},'18':{start:{line:31,column:4},end:{line:31,column:28}},'19':{start:{line:31,column:13},end:{line:31,column:28}},'20':{start:{line:32,column:4},end:{line:32,column:22}},'21':{start:{line:36,column:18},end:{line:36,column:52}},'22':{start:{line:38,column:0},end:{line:38,column:27}}},fnMap:{'0':{name:'(anonymous_0)',decl:{start:{line:11,column:23},end:{line:11,column:24}},loc:{start:{line:11,column:38},end:{line:27,column:1}},line:11},'1':{name:'(anonymous_1)',decl:{start:{line:16,column:21},end:{line:16,column:22}},loc:{start:{line:16,column:41},end:{line:26,column:3}},line:16},'2':{name:'(anonymous_2)',decl:{start:{line:19,column:43},end:{line:19,column:44}},loc:{start:{line:19,column:63},end:{line:25,column:5}},line:19},'3':{name:'(anonymous_3)',decl:{start:{line:29,column:37},end:{line:29,column:38}},loc:{start:{line:29,column:60},end:{line:34,column:1}},line:29},'4':{name:'(anonymous_4)',decl:{start:{line:30,column:42},end:{line:30,column:43}},loc:{start:{line:30,column:65},end:{line:33,column:3}},line:30}},branchMap:{'0':{loc:{start:{line:14,column:2},end:{line:14,column:50}},type:'if',locations:[{start:{line:14,column:2},end:{line:14,column:50}},{start:{line:14,column:2},end:{line:14,column:50}}],line:14},'1':{loc:{start:{line:17,column:4},end:{line:17,column:30}},type:'if',locations:[{start:{line:17,column:4},end:{line:17,column:30}},{start:{line:17,column:4},end:{line:17,column:30}}],line:17},'2':{loc:{start:{line:20,column:6},end:{line:20,column:32}},type:'if',locations:[{start:{line:20,column:6},end:{line:20,column:32}},{start:{line:20,column:6},end:{line:20,column:32}}],line:20},'3':{loc:{start:{line:31,column:4},end:{line:31,column:28}},type:'if',locations:[{start:{line:31,column:4},end:{line:31,column:28}},{start:{line:31,column:4},end:{line:31,column:28}}],line:31}},s:{'0':0,'1':0,'2':0,'3':0,'4':0,'5':0,'6':0,'7':0,'8':0,'9':0,'10':0,'11':0,'12':0,'13':0,'14':0,'15':0,'16':0,'17':0,'18':0,'19':0,'20':0,'21':0,'22':0},f:{'0':0,'1':0,'2':0,'3':0,'4':0},b:{'0':[0,0],'1':[0,0],'2':[0,0],'3':[0,0]},_coverageSchema:'332fd63041d2c1bcb487cc26dd0d5f7d97098a6c'},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();const mongoose=(cov_1kdv08dd7c.s[0]++,require('mongoose'));const bcrypt=(cov_1kdv08dd7c.s[1]++,require('bcrypt-nodejs'));const Schema=(cov_1kdv08dd7c.s[2]++,mongoose.Schema);const userSchema=(cov_1kdv08dd7c.s[3]++,new Schema({email:{type:String,lowercase:true},password:{type:String}},{timestamps:true}));cov_1kdv08dd7c.s[4]++;userSchema.pre('save',function(next){cov_1kdv08dd7c.f[0]++;let user=(cov_1kdv08dd7c.s[5]++,this);// only hash the password if it has been modified (or is new)
cov_1kdv08dd7c.s[6]++;if(!user.isModified('password')){cov_1kdv08dd7c.b[0][0]++;cov_1kdv08dd7c.s[7]++;return next();}else{cov_1kdv08dd7c.b[0][1]++;}// generate a salt
cov_1kdv08dd7c.s[8]++;bcrypt.genSalt(10,function(err,salt){cov_1kdv08dd7c.f[1]++;cov_1kdv08dd7c.s[9]++;if(err){cov_1kdv08dd7c.b[1][0]++;cov_1kdv08dd7c.s[10]++;return next(err);}else{cov_1kdv08dd7c.b[1][1]++;}// hash the password along with our new salt
cov_1kdv08dd7c.s[11]++;bcrypt.hash(user.password,salt,null,function(err,hash){cov_1kdv08dd7c.f[2]++;cov_1kdv08dd7c.s[12]++;if(err){cov_1kdv08dd7c.b[2][0]++;cov_1kdv08dd7c.s[13]++;return next(err);}else{cov_1kdv08dd7c.b[2][1]++;}// override the cleartext password with the hashed one
cov_1kdv08dd7c.s[14]++;user.password=hash;cov_1kdv08dd7c.s[15]++;next();});});});cov_1kdv08dd7c.s[16]++;userSchema.methods.comparePassword=function(password,cb){cov_1kdv08dd7c.f[3]++;cov_1kdv08dd7c.s[17]++;bcrypt.compare(password,this.password,function(err,isMatch){cov_1kdv08dd7c.f[4]++;cov_1kdv08dd7c.s[18]++;if(err){cov_1kdv08dd7c.b[3][0]++;cov_1kdv08dd7c.s[19]++;return cb(err);}else{cov_1kdv08dd7c.b[3][1]++;}cov_1kdv08dd7c.s[20]++;cb(null,isMatch);});};const UserModel=(cov_1kdv08dd7c.s[21]++,mongoose.model('user',userSchema));cov_1kdv08dd7c.s[22]++;module.exports=UserModel;